// <auto-generated />
using System;
using LojaDeInstrumentosMusicais.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaDeInstrumentosMusicais.Infrastructure.Migrations
{
    [DbContext(typeof(LojaDeInstrumentosMusicaisContext))]
    partial class LojaDeInstrumentosMusicaisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LojaDeInstrumentosMusicais.Domain.Models.InstrumentoMusicalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdVenda")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdVenda");

                    b.ToTable("Instrumentos");
                });

            modelBuilder.Entity("LojaDeInstrumentosMusicais.Domain.Models.VendaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDaVenda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdPedido")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.Property<int>("StatusDaVenda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVendedor");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("LojaDeInstrumentosMusicais.Domain.Models.VendedorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Telefone")
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("LojaDeInstrumentosMusicais.Domain.Models.InstrumentoMusicalModel", b =>
                {
                    b.HasOne("LojaDeInstrumentosMusicais.Domain.Models.VendaModel", "Venda")
                        .WithMany("Instrumentos")
                        .HasForeignKey("IdVenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("LojaDeInstrumentosMusicais.Domain.Models.VendaModel", b =>
                {
                    b.HasOne("LojaDeInstrumentosMusicais.Domain.Models.VendedorModel", "Vendedor")
                        .WithMany("Vendas")
                        .HasForeignKey("IdVendedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("LojaDeInstrumentosMusicais.Domain.Models.VendaModel", b =>
                {
                    b.Navigation("Instrumentos");
                });

            modelBuilder.Entity("LojaDeInstrumentosMusicais.Domain.Models.VendedorModel", b =>
                {
                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
